{
    "error": [
        {
            "severity": "error",
            "line_from": 64,
            "line_to": 64,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, array<array-key, string>>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::mapStockToStores is incorrect, got 'array<array-key, array<array-key, null|string>>'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "     * @return array<array<string>>",
            "selected_text": "array<array<string>>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 75,
            "line_to": 75,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'array<array-key, array<array-key, null|string>>' does not match the declared return type 'array<array-key, array<array-key, string>>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::mapStockToStores",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return $storeStockMapping;",
            "selected_text": "$storeStockMapping",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 81,
            "line_to": 81,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation is incorrect, got 'array<array-key|mixed, mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "     * @return array<string>",
            "selected_text": "array<string>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 91,
            "line_to": 91,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'array<array-key|mixed, mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return $storeNames;",
            "selected_text": "$storeNames",
            "error_level": 6,
            "shortcode": 128
        }
    ],
    "warning": [
        {
            "severity": "info",
            "line_from": 76,
            "line_to": 76,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::add cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Calculator.php",
            "snippet": "            $quantity = $quantity->add($stockProductTransfer->getQuantity());",
            "selected_text": "$stockProductTransfer->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 143,
            "line_to": 143,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockReaderInterface::getStockTypeIdByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idStockType = $this->stockReader->getStockTypeIdByName($transferStockProduct->getStockType());",
            "selected_text": "$transferStockProduct->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 144,
            "line_to": 144,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getProductConcreteIdBySku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idProduct = $this->stockProductReader->getProductConcreteIdBySku($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 148,
            "line_to": 148,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Model\\Writer::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $this->handleStockUpdatePlugins($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 174,
            "line_to": 174,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getProductConcreteIdBySku cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idProduct = $this->stockProductReader->getProductConcreteIdBySku($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 175,
            "line_to": 175,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockReaderInterface::getStockTypeIdByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $idStock = $this->stockReader->getStockTypeIdByName($transferStockProduct->getStockType());",
            "selected_text": "$transferStockProduct->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 176,
            "line_to": 176,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getStockProductById cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $stockProductEntity = $this->stockProductReader->getStockProductById($transferStockProduct->getIdStockProduct());",
            "selected_text": "$transferStockProduct->getIdStockProduct()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 186,
            "line_to": 186,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Model\\Writer::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "        $this->handleStockUpdatePlugins($transferStockProduct->getSku());",
            "selected_text": "$transferStockProduct->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 327,
            "line_to": 327,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::hasStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            if (!$this->stockProductReader->hasStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType())) {",
            "selected_text": "$stockTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 327,
            "line_to": 327,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::hasStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "            if (!$this->stockProductReader->hasStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType())) {",
            "selected_text": "$stockTransfer->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 332,
            "line_to": 332,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getIdStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "                    $idStockProduct = $this->stockProductReader->getIdStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType());",
            "selected_text": "$stockTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 332,
            "line_to": 332,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReaderInterface::getIdStockProduct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "                    $idStockProduct = $this->stockProductReader->getIdStockProduct($stockTransfer->getSku(), $stockTransfer->getStockType());",
            "selected_text": "$stockTransfer->getStockType()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 101,
            "line_to": 101,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockEntityManagerInterface::addStockStoreRelations cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "                $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 102,
            "line_to": 102,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStores on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "                $stockTransfer->getStoreRelation()->getIdStores(),",
            "selected_text": "getIdStores",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 120,
            "line_to": 120,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Dependency\\Facade\\StockToTouchInterface::touchActive cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "            $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 132,
            "line_to": 132,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\StockExtension\\Dependency\\Plugin\\StockPostCreatePluginInterface::postCreate cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockCreator.php",
            "snippet": "            $stockResponseTransfer = $stockPostCreatePlugin->postCreate($stockTransfer);",
            "selected_text": "$stockTransfer",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $mapping[null|string] using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $mapping[$stockTransfer->getName()] = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$mapping",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $mapping[$stockTransfer->getName()] = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$stockTransfer->getStoreRelation()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 54,
            "line_to": 54,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'string' for /var/work/devvm/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/business/stock/stockmapper.php:54:1753:-:closure is not nullable, but 'null|string' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        return array_map(function (StoreTransfer $storeTransfer): string {",
            "selected_text": "string",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 55,
            "line_to": 55,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'string' for /var/work/devvm/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/business/stock/stockmapper.php:54:1753:-:closure is not nullable, but the function returns 'null|string'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            return $storeTransfer->getName();",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockMapper::getStoreNamesFromStoreRelation cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "        $relatedStoreNames = $this->getStoreNamesFromStoreRelation($stockTransfer->getStoreRelation());",
            "selected_text": "$stockTransfer->getStoreRelation()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 71,
            "line_to": 71,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $storeStockMapping[null|string] using possibly null offset null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "                $storeStockMapping[$storeTransfer->getName()][] = $stockTransfer->getName();",
            "selected_text": "$storeStockMapping",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 88,
            "line_to": 88,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $storeNames[$storeName] using possibly null offset mixed|null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockMapper.php",
            "snippet": "            $storeNames[$storeName] = $storeName;",
            "selected_text": "$storeNames",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 81,
            "line_to": 81,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockNamesForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "        $stockNames = $this->stockRepository->getStockNamesForStore($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\StockTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "        return $stockCollectionTransfer->getStocks()->getArrayCopy();",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 135,
            "line_to": 135,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for Spryker\\Zed\\Stock\\Business\\Stock\\StockReader::getStockTypeIdByName is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "     * @return int",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 145,
            "line_to": 145,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for Spryker\\Zed\\Stock\\Business\\Stock\\StockReader::getStockTypeIdByName is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockReader.php",
            "snippet": "        return $stockTransfer->getIdStock();",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 119,
            "line_to": 119,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\Stock\\StockStoreRelationshipUpdaterInterface::updateStockStoreRelationshipsForStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockUpdater.php",
            "snippet": "            $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 138,
            "line_to": 138,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Stock\\Dependency\\Facade\\StockToTouchInterface::touchActive cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockUpdater.php",
            "snippet": "            $stockTransfer->getIdStock(),",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 150,
            "line_to": 150,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\StockExtension\\Dependency\\Plugin\\StockPostUpdatePluginInterface::postUpdate cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Stock/StockUpdater.php",
            "snippet": "            $stockResponseTransfer = $stockPostUpdatePlugin->postUpdate($stockTransfer);",
            "selected_text": "$stockTransfer",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 89,
            "line_to": 89,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByNeverOutOfStockAllTypes cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByNeverOutOfStockAllTypes($idProduct)",
            "selected_text": "$idProduct",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 103,
            "line_to": 103,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReader::getStoreWarehouses cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $stockNames = $this->getStoreWarehouses($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 106,
            "line_to": 106,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByNeverOutOfStockAllTypesForStockNames cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByNeverOutOfStockAllTypesForStockNames($idProduct, $stockNames)",
            "selected_text": "$idProduct",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 182,
            "line_to": 182,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductReader::getStoreWarehouses cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $storeWarehouseMapping = $this->getStoreWarehouses($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 308,
            "line_to": 308,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockNamesForStore cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "        $stockNames = $this->stockRepository->getStockNamesForStore($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 339,
            "line_to": 339,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockQueryContainerInterface::queryStockByProducts cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductReader.php",
            "snippet": "            ->queryStockByProducts($productConcreteTransfer->requireIdProductConcrete()->getIdProductConcrete())",
            "selected_text": "$productConcreteTransfer->requireIdProductConcrete()->getIdProductConcrete()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 57,
            "line_to": 57,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Persistence\\StockRepositoryInterface::getStockProductsByIdStock cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductUpdater.php",
            "snippet": "        $stockProducts = $this->stockRepository->getStockProductsByIdStock($stockTransfer->getIdStock());",
            "selected_text": "$stockTransfer->getIdStock()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 59,
            "line_to": 59,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Stock\\Business\\StockProduct\\StockProductUpdater::handleStockUpdatePlugins cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/StockProduct/StockProductUpdater.php",
            "snippet": "            $this->handleStockUpdatePlugins($stockProductTransfer->getSku());",
            "selected_text": "$stockProductTransfer->getSku()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 32,
            "line_to": 32,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::__construct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/AbstractSpyStockProduct.php",
            "snippet": "            (new Decimal($this->getQuantity()))->subtract($amount),",
            "selected_text": "$this->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\DecimalObject\\Decimal::__construct cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/AbstractSpyStockProduct.php",
            "snippet": "            (new Decimal($this->getQuantity()))->add($amount),",
            "selected_text": "$this->getQuantity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 73,
            "line_to": 73,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for /var/work/devvm/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/persistence/propel/mapper/stockstorerelationmapper.php:73:2470:-:closure is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/Mapper/StockStoreRelationMapper.php",
            "snippet": "        return array_map(function (StoreTransfer $storeTransfer): int {",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 74,
            "line_to": 74,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for /var/work/devvm/project/vendor/spryker/spryker/bundles/stock/src/spryker/zed/stock/persistence/propel/mapper/stockstorerelationmapper.php:73:2470:-:closure is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Persistence/Propel/Mapper/StockStoreRelationMapper.php",
            "snippet": "            return $storeTransfer->getIdStore();",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 5,
            "shortcode": 139
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 105,
            "line_to": 105,
            "type": "DeprecatedClass",
            "message": "Class Generated\\Shared\\Transfer\\TypeTransfer is marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Business/Model/Writer.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\TypeTransfer $stockTypeTransfer",
            "selected_text": "\\Generated\\Shared\\Transfer\\TypeTransfer",
            "error_level": 2,
            "shortcode": 98
        },
        {
            "severity": "info",
            "line_from": 20,
            "line_to": 20,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Product\\Dependency\\Plugin\\ProductConcretePluginCreateInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Stock/src/Spryker/Zed/Stock/Communication/Plugin/ProductConcreteAfterCreatePlugin.php",
            "snippet": "class ProductConcreteAfterCreatePlugin extends AbstractPlugin implements ProductConcretePluginCreateInterface",
            "selected_text": "ProductConcreteAfterCreatePlugin",
            "error_level": 2,
            "shortcode": 152
        }
    ],
    "count": 48
}
